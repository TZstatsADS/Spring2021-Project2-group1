library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>%s</strong><br/> <strong>%s</strong>",
map_data$State, map_data$Rank,map_data$Score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$Score, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$Score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$Score, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$Rank) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Rank),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$Rank, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Rank),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$Rank, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Rank),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$Rank, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$score, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~map_data$score, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = map_data$score, opacity = 0.7, title = NULL,
position = "bottomright")
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> Rank: %s</strong><br/> <strong>Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> Rank: %s</strong><br/> Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> Rank: %s</strong><br/> Score: %s</strong>",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> ———— <br/> Score: %s ",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library(shiny)
library(leaflet)
library(tidyverse)
library(htmltools)
library(maps)
map_data<-read.csv("final_model_table.csv",stringsAsFactors = FALSE)
map_data<-map_data%>%
mutate(score=Score*100,Score=1-Score)
mapStates=map("state",fill=TRUE,plot=FALSE)
pal <- colorBin("YlOrRd", domain = map_data$Score)
labels <- sprintf(
"<strong>%s</strong><br/> <strong>Rank: %s</strong><br/> ———— <br/> Score: %s ",
map_data$State, map_data$Rank,map_data$score) %>%
lapply(htmltools::HTML)
leaflet(data=mapStates) %>%
setView(-96, 37.8, 4) %>%
addTiles() %>%
addPolygons(
fillColor = pal(map_data$Score),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
