make_color_pal <- function(colors, bias = 1) {
get_color <- colorRamp(colors, bias = bias)
function(x) rgb(get_color(x), maxColorValue = 255)
}
good_color <- make_color_pal(colorschemes$BluetoOrange.12, bias = 2)
library(reactable)
library(htmltools)
library(dichromat)
library(shiny)
setwd("~/Downloads/GitHub/Spring2021-Project2-group1/data/cleaned_model_data")
rank_data<- read.csv("final_model4.csv",stringsAsFactors = FALSE)
covid_cols<-c("One_Month_Cases","One_month_fatality_rate","Total_Deaths","Positive_Test_Rate")
human_cols<-c("lockdown_severity","Mobility","Gross_State_Product","Rank_health","HDI")
vul_cols<-c("assess_to_vaccines_per_hundred",
"doses_per_hundred",
"HospitalBeds",
"respiratory_mortality_rate",
"respiratory_infections_rate",
"obesity_prevalence")
rank_data<-rank_data[,c("Rank","State","Score",covid_cols,vul_cols,human_cols)]
head(rank_data)
make_color_pal <- function(colors, bias = 1) {
get_color <- colorRamp(colors, bias = bias)
function(x) rgb(get_color(x), maxColorValue = 255)
}
good_color <- make_color_pal(colorschemes$BluetoOrange.12, bias = 2)
reactable(rank_data,
pagination = FALSE,
borderless = FALSE,
defaultSorted = "Rank",
defaultSortOrder = "asc",
showSortIcon = FALSE,
minRows = 25,
defaultColDef = colDef(
align = "center",
minWidth = 100
),
theme = reactableTheme(
headerStyle = list(
"&:hover[aria-sort]" = list(background = "hsl(0, 0%, 96%)"),
"&[aria-sort='ascending'], &[aria-sort='descending']" = list(background = "hsl(0, 0%, 96%)"),
borderColor = "#555"
)),
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "COVID SEVERITY STATUS", columns = covid_cols),
colGroup(name = "QUALITY OF LIFE", columns = human_cols),
colGroup(name = "VULNERABIlITY",columns = vul_cols)),
columns = list(
#RANK
Rank=colDef(name="RANK",align="left"),
#STATE need to insert pictures
State = colDef(defaultSortOrder = "asc",
minWidth = 200,
headerStyle = list(fontWeight = 700),
cell = function(value) {
image<-img(src = sprintf("images/%s.png", value), height = "24px", alt =value)
tagList(
div(style = list(display = "inline-block", width = "45px"), image)
) }),
#SCORE need colors
Score=colDef(name="RESILIENCE SCORE",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$Score)) /
(max(rank_data$Score) - min(rank_data$Score))
color <- good_color(normalized)
list(background = color)
}),
#1-MONTH CASES, negative
One_Month_Cases=colDef(name="1-MONTH CASES",
format=colFormat(separators = TRUE),
class = "border-left",
style = function(value) {
value
normalized <- (value - min(rank_data$One_Month_Cases)) /
(max(rank_data$One_Month_Cases) - min(rank_data$One_Month_Cases))
color <- good_color(normalized)
list(background = color)
}),
#1-MONTH FATALITY RATE, negative
One_month_fatality_rate=colDef(name="1-MONTH FATALITY RATE",
format=colFormat(percent = TRUE,digits = 1),
style = function(value) {
value
normalized <- (value - min(rank_data$One_month_fatality_rate)) /
(max(rank_data$One_month_fatality_rate) - min(rank_data$One_month_fatality_rate))
color <- good_color(normalized)
list(background = color)
}),
#TOTAL DEATHS negative
Total_Deaths=colDef(name="TOTAL DEATHS",
format=colFormat(separators = TRUE),
style = function(value) {
value
normalized <- (value - min(rank_data$Total_Deaths)) /
(max(rank_data$Total_Deaths) - min(rank_data$Total_Deaths))
color <- good_color(normalized)
list(background = color)
}),
#POSITIVE TEST RATE negative
Positive_Test_Rate=colDef(name="POSITIVE TEST RATE",
format=colFormat(percent = TRUE,digits = 1),
style = function(value) {
value
normalized <- (value - min(rank_data$Positive_Test_Rate)) /
(max(rank_data$Positive_Test_Rate) - min(rank_data$Positive_Test_Rate))
color <- good_color(normalized)
list(background = color)
}),
#ACCESS TO COVID VACCINES, positive
assess_to_vaccines_per_hundred=colDef(name="ACCESS TO COVID VACCINES",
format=colFormat(digits = 0),
class = "border-left",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$assess_to_vaccines_per_hundred)) /
(max(rank_data$assess_to_vaccines_per_hundred) - min(rank_data$assess_to_vaccines_per_hundred))
color <- good_color(normalized)
list(background = color)
}),
#DOSES GIVEN PER 100, positive
doses_per_hundred=colDef(name="DOSES GIVEN PER 100", format=colFormat(digits = 0),
style = function(value) {
value
normalized <- 1-(value - min(rank_data$doses_per_hundred)) /
(max(rank_data$doses_per_hundred) - min(rank_data$doses_per_hundred))
color <- good_color(normalized)
list(background = color)
}),
#LOCKDOWN SEVERITY, negative
lockdown_severity=colDef(name="LOCKDOWN SEVERITY",
format=colFormat(digits =0),
class = "border-left",
style = function(value) {
value
normalized <- (value - min(rank_data$lockdown_severity)) /
(max(rank_data$lockdown_severity) - min(rank_data$lockdown_severity))
color <- good_color(normalized)
list(background = color)
}),
#COMMUNITY MOBILITY, positive
Mobility=colDef(name="COMMUNITY MOBILITY",format=colFormat(digits = 0,suffix = "%"),
style = function(value) {
value
normalized <- (value - min(rank_data$Mobility)) /
(max(rank_data$Mobility) - min(rank_data$Mobility))
color <- good_color(normalized)
list(background = color)
}),
#2021 GDP GROWTH FORECAST, positive
Gross_State_Product=colDef(name="2021 GDP GROWTH FORECAST",format=colFormat(currency = "USD"),
style = function(value) {
value
normalized <- 1-(value - min(rank_data$Gross_State_Product)) /
(max(rank_data$Gross_State_Product) - min(rank_data$Gross_State_Product))
color <- good_color(normalized)
list(background = color)
}),
#HEALTHCARE RANK, negative
Rank_health=colDef(name="HEALTHCARE RANK",
style = function(value) {
value
normalized <- (value - min(rank_data$Rank_health)) /
(max(rank_data$Rank_health) - min(rank_data$Rank_health))
color <- good_color(normalized)
list(background = color)
}),
#HUMAN DEVELOPMENT INDEX:positive
HDI=dcolDef(name="HUMAN DEVELOPMENT INDEX",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$HDI)) /
(max(rank_data$HDI) - min(rank_data$HDI))
color <- good_color(normalized)
list(background = color)
}),
#respiratory mortality rate: negative
respiratory_mortality_rate=colDef(
name="respiratory mortality rate",format=colFormat(percent =TRUE,digits=0),
style = function(value) {
value
normalized <- (value - min(rank_data$respiratory_mortality_rate)) /
(max(rank_data$respiratory_mortality_rate) - min(rank_data$respiratory_mortality_rate))
color <- good_color(normalized)
list(background = color)
}),
#respiratory infections rate: negative
respiratory_infections_rate=colDef(name="respiratory infections rate",
format=colFormat(percent=TRUE,digits = 0),
style = function(value) {
value
normalized <- (value - min(rank_data$respiratory_infections_rate)) /
(max(rank_data$respiratory_infections_rate) -min(rank_data$respiratory_infections_rate))
color <- good_color(normalized)
list(background = color)
}),
#OBESITY PREVALENCE, negative
obesity_prevalence=colDef(name="OBESITY PREVALENCE",
format=colFormat(percent=TRUE),
style = function(value) {
value
normalized <- (value - min(rank_data$obesity_prevalence)) /
(max(rank_data$obesity_prevalence) - min(rank_data$obesity_prevalence))
color <- good_color(normalized)
list(background = color)
}),
#HOSPITAL BEDS,psotive
HospitalBeds=colDef(name="HOSPITAL BEDS",
format=colFormat(digits=3),
style = function(value) {
value
normalized <-1- (value - min(rank_data$HospitalBeds)) /
(max(rank_data$HospitalBeds) - min(rank_data$HospitalBeds))
color <- good_color(normalized)
list(background = color)
}
)
))
make_color_pal <- function(colors, bias = 1) {
get_color <- colorRamp(colors, bias = bias)
function(x) rgb(get_color(x), maxColorValue = 255)
}
good_color <- make_color_pal(colorschemes$BluetoOrange.12, bias = 2)
reactable(rank_data,
pagination = FALSE,
borderless = FALSE,
defaultSorted = "Rank",
defaultSortOrder = "asc",
showSortIcon = FALSE,
minRows = 25,
defaultColDef = colDef(
align = "center",
minWidth = 100
),
theme = reactableTheme(
headerStyle = list(
"&:hover[aria-sort]" = list(background = "hsl(0, 0%, 96%)"),
"&[aria-sort='ascending'], &[aria-sort='descending']" = list(background = "hsl(0, 0%, 96%)"),
borderColor = "#555"
)),
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "COVID SEVERITY STATUS", columns = covid_cols),
colGroup(name = "QUALITY OF LIFE", columns = human_cols),
colGroup(name = "VULNERABIlITY",columns = vul_cols)),
columns = list(
#RANK
Rank=colDef(name="RANK",align="left"),
#STATE need to insert pictures
State=colDef(defaultSortOrder = "asc",
minWidth = 200,
headerStyle = list(fontWeight = 700),
cell = function(value) {
image<-img(src = sprintf("images/%s.png", value), height = "24px", alt =value)
tagList(
div(style = list(display = "inline-block", width = "45px"), image)
) }),
#SCORE need colors
Score=colDef(name="RESILIENCE SCORE",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$Score)) /
(max(rank_data$Score) - min(rank_data$Score))
color <- good_color(normalized)
list(background = color)
}),
#1-MONTH CASES, negative
One_Month_Cases=colDef(name="1-MONTH CASES",
format=colFormat(separators = TRUE),
class = "border-left",
style = function(value) {
value
normalized <- (value - min(rank_data$One_Month_Cases)) /
(max(rank_data$One_Month_Cases) - min(rank_data$One_Month_Cases))
color <- good_color(normalized)
list(background = color)
}),
#1-MONTH FATALITY RATE, negative
One_month_fatality_rate=colDef(name="1-MONTH FATALITY RATE",
format=colFormat(percent = TRUE,digits = 1),
style = function(value) {
value
normalized <- (value - min(rank_data$One_month_fatality_rate)) /
(max(rank_data$One_month_fatality_rate) - min(rank_data$One_month_fatality_rate))
color <- good_color(normalized)
list(background = color)
}),
#TOTAL DEATHS negative
Total_Deaths=colDef(name="TOTAL DEATHS",
format=colFormat(separators = TRUE),
style = function(value) {
value
normalized <- (value - min(rank_data$Total_Deaths)) /
(max(rank_data$Total_Deaths) - min(rank_data$Total_Deaths))
color <- good_color(normalized)
list(background = color)
}),
#POSITIVE TEST RATE negative
Positive_Test_Rate=colDef(name="POSITIVE TEST RATE",
format=colFormat(percent = TRUE,digits = 1),
style = function(value) {
value
normalized <- (value - min(rank_data$Positive_Test_Rate)) /
(max(rank_data$Positive_Test_Rate) - min(rank_data$Positive_Test_Rate))
color <- good_color(normalized)
list(background = color)
}),
#ACCESS TO COVID VACCINES, positive
assess_to_vaccines_per_hundred=colDef(name="ACCESS TO COVID VACCINES",
format=colFormat(digits = 0),
class = "border-left",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$assess_to_vaccines_per_hundred)) /
(max(rank_data$assess_to_vaccines_per_hundred) - min(rank_data$assess_to_vaccines_per_hundred))
color <- good_color(normalized)
list(background = color)
}),
#DOSES GIVEN PER 100, positive
doses_per_hundred=colDef(name="DOSES GIVEN PER 100", format=colFormat(digits = 0),
style = function(value) {
value
normalized <- 1-(value - min(rank_data$doses_per_hundred)) /
(max(rank_data$doses_per_hundred) - min(rank_data$doses_per_hundred))
color <- good_color(normalized)
list(background = color)
}),
#LOCKDOWN SEVERITY, negative
lockdown_severity=colDef(name="LOCKDOWN SEVERITY",
format=colFormat(digits =0),
class = "border-left",
style = function(value) {
value
normalized <- (value - min(rank_data$lockdown_severity)) /
(max(rank_data$lockdown_severity) - min(rank_data$lockdown_severity))
color <- good_color(normalized)
list(background = color)
}),
#COMMUNITY MOBILITY, positive
Mobility=colDef(name="COMMUNITY MOBILITY",format=colFormat(digits = 0,suffix = "%"),
style = function(value) {
value
normalized <- (value - min(rank_data$Mobility)) /
(max(rank_data$Mobility) - min(rank_data$Mobility))
color <- good_color(normalized)
list(background = color)
}),
#2021 GDP GROWTH FORECAST, positive
Gross_State_Product=colDef(name="2021 GDP GROWTH FORECAST",format=colFormat(currency = "USD"),
style = function(value) {
value
normalized <- 1-(value - min(rank_data$Gross_State_Product)) /
(max(rank_data$Gross_State_Product) - min(rank_data$Gross_State_Product))
color <- good_color(normalized)
list(background = color)
}),
#HEALTHCARE RANK, negative
Rank_health=colDef(name="HEALTHCARE RANK",
style = function(value) {
value
normalized <- (value - min(rank_data$Rank_health)) /
(max(rank_data$Rank_health) - min(rank_data$Rank_health))
color <- good_color(normalized)
list(background = color)
}),
#HUMAN DEVELOPMENT INDEX:positive
HDI=colDef(name="HUMAN DEVELOPMENT INDEX",
style = function(value) {
value
normalized <- 1-(value - min(rank_data$HDI)) /
(max(rank_data$HDI) - min(rank_data$HDI))
color <- good_color(normalized)
list(background = color)
}),
#respiratory mortality rate: negative
respiratory_mortality_rate=colDef(
name="respiratory mortality rate",format=colFormat(percent =TRUE,digits=0),
style = function(value) {
value
normalized <- (value - min(rank_data$respiratory_mortality_rate)) /
(max(rank_data$respiratory_mortality_rate) - min(rank_data$respiratory_mortality_rate))
color <- good_color(normalized)
list(background = color)
}),
#respiratory infections rate: negative
respiratory_infections_rate=colDef(name="respiratory infections rate",
format=colFormat(percent=TRUE,digits = 0),
style = function(value) {
value
normalized <- (value - min(rank_data$respiratory_infections_rate)) /
(max(rank_data$respiratory_infections_rate) -min(rank_data$respiratory_infections_rate))
color <- good_color(normalized)
list(background = color)
}),
#OBESITY PREVALENCE, negative
obesity_prevalence=colDef(name="OBESITY PREVALENCE",
format=colFormat(percent=TRUE),
style = function(value) {
value
normalized <- (value - min(rank_data$obesity_prevalence)) /
(max(rank_data$obesity_prevalence) - min(rank_data$obesity_prevalence))
color <- good_color(normalized)
list(background = color)
}),
#HOSPITAL BEDS,psotive
HospitalBeds=colDef(name="HOSPITAL BEDS",
format=colFormat(digits=3),
style = function(value) {
value
normalized <-1- (value - min(rank_data$HospitalBeds)) /
(max(rank_data$HospitalBeds) - min(rank_data$HospitalBeds))
color <- good_color(normalized)
list(background = color)
}
)
))
